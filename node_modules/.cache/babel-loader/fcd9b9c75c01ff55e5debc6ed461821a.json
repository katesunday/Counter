{"ast":null,"code":"var _jsxFileName = \"/Users/katesunday/counter/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Board from \"./Board\";\nimport SettingBoard from \"./SettingBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let localMin = localStorage.getItem('min');\n  let localMax = localStorage.getItem('max');\n  let [maxNumber, setMaxNumber] = useState(localMax ? Number(localMax) : 0);\n  let [minNumber, setMinNumber] = useState(localMin ? Number(localMin) : 0);\n  let [myNumber, setNumber] = useState(minNumber);\n\n  const changeNumber = () => {\n    // do setNumber(++myNumber)\n    // while (myNumber<5)\n    if (myNumber < maxNumber) {\n      setNumber(++myNumber);\n    }\n  };\n\n  const resetNumber = () => {\n    setNumber(minNumber);\n  };\n\n  const showMinNumber = number => {\n    setNumber(number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      number: myNumber,\n      maxNumber: maxNumber,\n      minNumber: minNumber,\n      changeNumber: changeNumber,\n      resetNumber: resetNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingBoard, {\n      minNumber: minNumber,\n      maxNumber: maxNumber,\n      showMinNumber: showMinNumber,\n      setMinNumber: setMinNumber,\n      setMaxNumber: setMaxNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qsQ84Nxxf6A84EblmEg54WVq//k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/katesunday/counter/src/App.tsx"],"names":["React","useState","Board","SettingBoard","App","localMin","localStorage","getItem","localMax","maxNumber","setMaxNumber","Number","minNumber","setMinNumber","myNumber","setNumber","changeNumber","resetNumber","showMinNumber","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,MAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAf;AACA,MAAIC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAf;AACA,MAAI,CAACE,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAACO,QAAQ,GAACG,MAAM,CAACH,QAAD,CAAP,GAAkB,CAA3B,CAAvC;AACA,MAAI,CAACI,SAAD,EAAWC,YAAX,IAA2BZ,QAAQ,CAACI,QAAQ,GAACM,MAAM,CAACN,QAAD,CAAP,GAAkB,CAA3B,CAAvC;AACA,MAAI,CAACS,QAAD,EAAWC,SAAX,IAAwBd,QAAQ,CAACW,SAAD,CAApC;;AACA,QAAMI,YAAY,GAAG,MAAM;AACtB;AACA;AACD,QAAGF,QAAQ,GAACL,SAAZ,EAAsB;AAClBM,MAAAA,SAAS,CAAC,EAAED,QAAH,CAAT;AACH;AACJ,GAND;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAACH,SAAD,CAAT;AACD,GAFD;;AAGA,QAAMM,aAAa,GAAIC,MAAD,IAAmB;AACvCJ,IAAAA,SAAS,CAACI,MAAD,CAAT;AACD,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEL,QAAf;AACO,MAAA,SAAS,EAAEL,SADlB;AAEO,MAAA,SAAS,EAAIG,SAFpB;AAGO,MAAA,YAAY,EAAEI,YAHrB;AAIO,MAAA,WAAW,EAAIC;AAJtB;AAAA;AAAA;AAAA;AAAA,YADF,eAMI,QAAC,YAAD;AACI,MAAA,SAAS,EAAIL,SADjB;AAEI,MAAA,SAAS,EAAEH,SAFf;AAGI,MAAA,aAAa,EAAIS,aAHrB;AAII,MAAA,YAAY,EAAIL,YAJpB;AAKI,MAAA,YAAY,EAAIH;AALpB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArCQN,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React , {useState} from 'react';\nimport './App.css';\nimport Board from \"./Board\";\nimport SettingBoard from \"./SettingBoard\";\n\n\nfunction App() {\n    let localMin = localStorage.getItem('min')\n    let localMax = localStorage.getItem('max')\n    let [maxNumber,setMaxNumber] = useState(localMax?Number(localMax):0)\n    let [minNumber,setMinNumber] = useState(localMin?Number(localMin):0)\n    let [myNumber, setNumber] = useState(minNumber)\n    const changeNumber = () => {\n         // do setNumber(++myNumber)\n         // while (myNumber<5)\n        if(myNumber<maxNumber){\n            setNumber(++myNumber)\n        }\n    }\n    const resetNumber = () => {\n      setNumber(minNumber)\n    }\n    const showMinNumber = (number:number) => {\n      setNumber(number)\n    }\n\n  return (\n    <div className=\"App\">\n      <Board number={myNumber}\n             maxNumber={maxNumber}\n             minNumber = {minNumber}\n             changeNumber={changeNumber}\n             resetNumber = {resetNumber}/>\n        <SettingBoard\n            minNumber = {minNumber}\n            maxNumber={maxNumber}\n            showMinNumber = {showMinNumber}\n            setMinNumber = {setMinNumber}\n            setMaxNumber = {setMaxNumber}\n        />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}